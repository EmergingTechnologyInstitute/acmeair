buildscript {
    repositories { mavenCentral() }
}

def M2_REPO = System.getenv("M2_REPO")
allprojects {
    repositories {
		mavenCentral()
		maven {
			url "$M2_REPO"
		}
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	
    group = "com.acmeair.${rootProject.name}"
    version = rootProject.version
    sourceCompatibility = 1.6
    
    dependencies {
        compile 'com.netflix.hystrix:hystrix-core:1.3.0'
        compile 'com.netflix.ribbon:ribbon-core:0.2.0'
        compile 'com.netflix.ribbon:ribbon-eureka:0.2.0'
        compile 'com.netflix.ribbon:ribbon-httpclient:0.2.0'
        compile 'com.netflix.karyon:karyon-core:1.0.19'
        
        runtime 'com.sun.jersey:jersey-server:1.9.1'
        runtime 'com.sun.jersey:jersey-json:1.9.1'
        runtime 'org.codehaus.jackson:jackson-jaxrs:1.9.11'
        runtime 'org.codehaus.jackson:jackson-xc:1.9.11'        	  	       
    }
}	

task wrapper(type: Wrapper) {
	gradleVersion = '1.6'
}

project(':acmeair-common') {
	dependencies {		
	}
}

project(':acmeair-services') {
	dependencies {
		compile project(':acmeair-common')
		compile 'org.springframework:spring-context:3.1.2.RELEASE'
		testCompile 'cglib:cglib:2.2.2'
	}
}

project(':acmeair-services-astyanax') {
	dependencies {
		compile project(':acmeair-common')
		compile project(':acmeair-services')		
		compile 'junit:junit:4.11'				
		compile 'com.google.guava:guava:12.0'
		compile 'org.springframework:spring-context:3.1.2.RELEASE'
		compile 'com.netflix.astyanax:astyanax:1.56.42'
		compile 'com.netflix.hystrix:hystrix-core:1.0.2'
	}
}

project(':acmeair-webapp') {

	dependencies {
		compile project(':acmeair-common')
		compile project(':acmeair-services')		
        compile project(':acmeair-services-astyanax')
		compile 'commons-io:commons-io:2.4'
		compile 'org.springframework:spring-context:3.1.2.RELEASE'		
		runtime 'org.springframework:spring-web:3.1.2.RELEASE'
		runtime 'cglib:cglib:2.2.2'
		runtime 'org.aspectj:aspectjrt:1.6.8'
		runtime 'org.aspectj:aspectjweaver:1.6.8'
		runtime 'com.google.inject.extensions:guice-servlet:3.0'
		runtime 'com.google.inject:guice:3.0'
		runtime 'com.netflix.karyon:karyon-server:0.1.2'
		runtime 'com.netflix.karyon:karyon-admin-web:1.0.19'
		runtime 'com.netflix.karyon:karyon-extensions:1.0.19'
		// netflix uses slf4j 
		runtime 'org.slf4j:slf4j-api:1.7.2'
		// spring uses jcl bridge to slf4j
		runtime 'org.slf4j:jcl-over-slf4j:1.7.2'
		// use log4j under slf4j
		runtime 'org.slf4j:slf4j-log4j12:1.7.2'
	}
}

project(':acmeair-webapp-wlp') {
	apply plugin: 'war'
	
	dependencies {
		runtime project(':acmeair-webapp')

		// skip this dependency from spring as we're using jcl over slf4j
		providedRuntime 'commons-logging:commons-logging:1.1.1'
		// skip the JEE components that this app server provides
		providedRuntime 'javax:javaee-web-api:6.0'   
		providedRuntime 'javax.servlet:servlet-api:2.5'
		providedRuntime 'org.eclipse.jetty.orbit:javax.servlet:2.5.0.v201103041518'		       
		// skip these as we'll include it in the war patched
		//providedRuntime 'com.netflix.governator:governator:1.1.1@jar'
		// providedRuntime 'com.netflix.eureka:eureka-client:1.1.73@jar' // enable this to work in SoftLayer changes
	}
	
	war {
		from '../acmeair-webapp/src/main/webapp'	
	}
	
		task buildWar(dependsOn: war) << {
		 
			println('Fixing war')			
			def targetDir = 'build/tmp/expandedWar/'
			def libDir = targetDir+'WEB-INF/lib/'
			println('Deleting Directory')
			ant.delete(dir:targetDir)
			
			println('Extracting war')
			ant.unzip(src : 'build/libs/acmeair-webapp-wlp-0.1.0-SNAPSHOT.war', dest : targetDir)
			
			println('Jiggling Files')
			ant.move(file : libDir+'acmeair-webapp-0.1.0-SNAPSHOT.jar', tofile : libDir+'acmeair-webapp-0.1.0-SNAPSHOT.jar.orig', overwrite:"true")
			ant.move(file : libDir+'acmeair-services-astyanax-0.1.0-SNAPSHOT.jar', tofile : libDir+'acmeair-services-astyanax-0.1.0-SNAPSHOT.jar.orig', overwrite:"true")
			ant.move(file : libDir+'karyon-admin-1.0.19.jar', tofile : libDir+'karyon-admin-1.0.19.jar.orig', overwrite:"true")
			ant.move(file : libDir+'karyon-admin-web-1.0.19.jar', tofile : libDir+'karyon-admin-web-1.0.19.jar.orig', overwrite:"true")
			
			println('Unzipping Files')
			ant.unzip(dest : libDir+'acmeair-webapp-0.1.0-SNAPSHOT.jar', src : libDir+'acmeair-webapp-0.1.0-SNAPSHOT.jar.orig', overwrite:"true")
			ant.unzip(dest : libDir+'acmeair-services-astyanax-0.1.0-SNAPSHOT.jar', src : libDir+'acmeair-services-astyanax-0.1.0-SNAPSHOT.jar.orig', overwrite:"true")
			ant.unzip(dest : libDir+'karyon-admin-1.0.19.jar', src : libDir+'karyon-admin-1.0.19.jar.orig', overwrite:"true")
			ant.unzip(dest : libDir+'karyon-admin-web-1.0.19.jar', src : libDir+'karyon-admin-web-1.0.19.jar.orig', overwrite:"true")
			
			println('Patching Governator')

			ant.copy(file : libDir+'/governator-1.1.1.jar', tofile : libDir+'/governator-1.1.1.jar.orig', overwrite:"true")			
			ant.jar( destfile : libDir+'/governator-1.1.1.jar', update : 'yes', basedir : '../acmeair-webapp-wlp/patchGovernator')
			
			println('Patching Eureka')
			
			ant.copy(file : libDir+'/eureka-client-1.1.73.jar', tofile : libDir+'/eureka-client-1.1.73.jar.orig', overwrite:"true")			
			ant.jar( destfile : libDir+'/eureka-client-1.1.73.jar', update : 'yes', basedir : '../acmeair-webapp-wlp/patchEureka')
			
			println('Replacing original WAR')
			ant.move(file : 'build/libs/acmeair-webapp-wlp-0.1.0-SNAPSHOT.war', tofile : 'build/libs/acmeair-webapp-wlp-0.1.0-SNAPSHOT.war.orig')
			ant.zip(destfile : 'build/libs/acmeair-webapp-wlp-0.1.0-SNAPSHOT.war', basedir : targetDir)						
	}
}

project(':acmeair-webapp-tc7') {
	apply plugin: 'war'

	dependencies {
		runtime project(':acmeair-webapp')

		// skip this dependency from spring as we're using jcl over slf4j
		providedRuntime 'commons-logging:commons-logging:1.1.1'
		// skip the JEE components that this app server provides
		providedRuntime 'javax:javaee-web-api:6.0'
		providedRuntime 'javax.servlet:servlet-api:2.5'
		providedRuntime 'org.eclipse.jetty.orbit:javax.servlet:2.5.0.v201103041518'
		providedRuntime 'org.mortbay.jetty:servlet-api:2.5-20081211'		
	}
	
	war {
		from '../acmeair-webapp/src/main/webapp'
	}
	
			task buildWar(dependsOn: war) << {
		 
			println('Fixing war')			
			def targetDir = 'build/tmp/expandedWar/'
			def libDir = targetDir+'WEB-INF/lib/'
			println('Deleting Directory')
			ant.delete(dir:targetDir)
			
			println('Extracting war')
			ant.unzip(src : 'build/libs/acmeair-webapp-tc7-0.1.0-SNAPSHOT.war', dest : targetDir)
								
			println('Patching Governator')

			ant.copy(file : libDir+'/governator-1.1.1.jar', tofile : libDir+'/governator-1.1.1.jar.orig', overwrite:"true")			
			ant.jar( destfile : libDir+'/governator-1.1.1.jar', update : 'yes', basedir : '../acmeair-webapp-wlp/patchGovernator')
			
			println('Patching Eureka')
			
			ant.copy(file : libDir+'/eureka-client-1.1.73.jar', tofile : libDir+'/eureka-client-1.1.73.jar.orig', overwrite:"true")			
			ant.jar( destfile : libDir+'/eureka-client-1.1.73.jar', update : 'yes', basedir : '../acmeair-webapp-wlp/patchEureka')
			
			println('Replacing original WAR')
			ant.move(file : 'build/libs/acmeair-webapp-tc7-0.1.0-SNAPSHOT.war', tofile : 'build/libs/acmeair-webapp-tc7-0.1.0-SNAPSHOT.war.orig')
			ant.zip(destfile : 'build/libs/acmeair-webapp-tc7-0.1.0-SNAPSHOT.war', basedir : targetDir)						
	}	
}

project(':acmeair-auth-service') {
	dependencies {
		compile project(':acmeair-common')
		compile project(':acmeair-services')		
                compile project(':acmeair-services-astyanax')		
		compile 'org.springframework:spring-context:3.1.2.RELEASE'                       
		runtime 'org.springframework:spring-web:3.1.2.RELEASE'
		runtime 'cglib:cglib:2.2.2'
		runtime 'org.aspectj:aspectjrt:1.6.8'
		runtime 'org.aspectj:aspectjweaver:1.6.8'
		runtime 'com.google.inject.extensions:guice-servlet:3.0'
		runtime 'com.google.inject:guice:3.0'
		runtime 'com.netflix.karyon:karyon-server:0.1.2'
		runtime 'com.netflix.karyon:karyon-admin-web:1.0.19'
		runtime 'com.netflix.karyon:karyon-extensions:1.0.19'
		// netflix uses slf4j 
		runtime 'org.slf4j:slf4j-api:1.7.2'
		// spring uses jcl bridge to slf4j
		runtime 'org.slf4j:jcl-over-slf4j:1.7.2'
		// use log4j under slf4j
		runtime 'org.slf4j:slf4j-log4j12:1.7.2'		               
	}
}

project(':acmeair-auth-service-wlp') {
	apply plugin: 'war'

	dependencies {
		runtime project(':acmeair-auth-service')

		// skip this dependency from spring as we're using jcl over slf4j
		providedRuntime 'commons-logging:commons-logging:1.1.1'
		// skip the JEE components that this app server provides
		providedRuntime 'javax:javaee-web-api:6.0'   
		providedRuntime 'javax.servlet:servlet-api:2.5'
		providedRuntime 'org.eclipse.jetty.orbit:javax.servlet:2.5.0.v201103041518'        
		// skip these as we'll include it in the war patched
		//providedRuntime 'com.netflix.governator:governator:1.1.1@jar' - Will patch later
		// providedRuntime 'com.netflix.eureka:eureka-client:1.1.73@jar' // enable this to work in SoftLayer changes
	}
		
	war {
		from '../acmeair-auth-service/src/main/webapp'	
	}
	
	task buildWar(dependsOn: war) << {
		 
			println('Fixing war')			
			def targetDir = 'build/tmp/expandedWar/'
			def libDir = targetDir+'WEB-INF/lib/'
			println('Deleting Directory')
			ant.delete(dir:targetDir)
			
			println('Extracting war')
			ant.unzip(src : 'build/libs/acmeair-auth-service-wlp-0.1.0-SNAPSHOT.war', dest : targetDir)
			
			println('Jiggling Files')
			ant.move(file : libDir+'acmeair-auth-service-0.1.0-SNAPSHOT.jar', tofile : libDir+'acmeair-auth-service-0.1.0-SNAPSHOT.jar.orig', overwrite:"true")
			ant.move(file : libDir+'karyon-admin-1.0.19.jar', tofile : libDir+'karyon-admin-1.0.19.jar.orig', overwrite:"true")
			ant.move(file : libDir+'karyon-admin-web-1.0.19.jar', tofile : libDir+'karyon-admin-web-1.0.19.jar.orig', overwrite:"true")
			
			println('Unzipping Files')
			ant.unzip(dest : libDir+'acmeair-auth-service-0.1.0-SNAPSHOT.jar', src : libDir+'acmeair-auth-service-0.1.0-SNAPSHOT.jar.orig', overwrite:"true")
			ant.unzip(dest : libDir+'karyon-admin-1.0.19.jar', src : libDir+'karyon-admin-1.0.19.jar.orig', overwrite:"true")
			ant.unzip(dest : libDir+'karyon-admin-web-1.0.19.jar', src : libDir+'karyon-admin-web-1.0.19.jar.orig', overwrite:"true")
			
			println('Patching Governator')

			ant.copy(file : libDir+'/governator-1.1.1.jar', tofile : libDir+'/governator-1.1.1.jar.orig', overwrite:"true")			
			ant.jar( destfile : libDir+'/governator-1.1.1.jar', update : 'yes', basedir : '../acmeair-webapp-wlp/patchGovernator')
			
			println('Patching Eureka')
			
			ant.copy(file : libDir+'/eureka-client-1.1.73.jar', tofile : libDir+'/eureka-client-1.1.73.jar.orig', overwrite:"true")			
			ant.jar( destfile : libDir+'/eureka-client-1.1.73.jar', update : 'yes', basedir : '../acmeair-webapp-wlp/patchEureka')
			
			println('Replacing original WAR')
			ant.move(file : 'build/libs/acmeair-auth-service-wlp-0.1.0-SNAPSHOT.war', tofile : 'build/libs/acmeair-auth-service-wlp-0.1.0-SNAPSHOT.war.orig')
			ant.zip(destfile : 'build/libs/acmeair-auth-service-wlp-0.1.0-SNAPSHOT.war', basedir : targetDir)						
	}
}

project(':acmeair-auth-service-tc7') {
	apply plugin: 'war'

	dependencies {
		runtime project(':acmeair-auth-service')
		
		// skip this dependency from spring as we're using jcl over slf4j
		providedRuntime 'commons-logging:commons-logging:1.1.1'
		// skip the JEE components that this app server provides
		providedRuntime 'javax:javaee-web-api:6.0'
		providedRuntime 'org.mortbay.jetty:servlet-api:2.5-20081211'
		providedRuntime 'javax.servlet:servlet-api:2.5'
		providedRuntime 'org.eclipse.jetty.orbit:javax.servlet:2.5.0.v201103041518'
	}
	
	war {
		from '../acmeair-auth-service/src/main/webapp'
	}
	
	task buildWar(dependsOn: war) << {
		 
			println('Fixing war')			
			def targetDir = 'build/tmp/expandedWar/'
			def libDir = targetDir+'WEB-INF/lib/'
			println('Deleting Directory')
			ant.delete(dir:targetDir)
			
			println('Extracting war')
			ant.unzip(src : 'build/libs/acmeair-auth-service-tc7-0.1.0-SNAPSHOT.war', dest : targetDir)
					
			println('Patching Governator')

			ant.copy(file : libDir+'/governator-1.1.1.jar', tofile : libDir+'/governator-1.1.1.jar.orig', overwrite:"true")			
			ant.jar( destfile : libDir+'/governator-1.1.1.jar', update : 'yes', basedir : '../acmeair-webapp-wlp/patchGovernator')
			
			println('Patching Eureka')
			
			ant.copy(file : libDir+'/eureka-client-1.1.73.jar', tofile : libDir+'/eureka-client-1.1.73.jar.orig', overwrite:"true")			
			ant.jar( destfile : libDir+'/eureka-client-1.1.73.jar', update : 'yes', basedir : '../acmeair-webapp-wlp/patchEureka')
			
			println('Replacing original WAR')
			ant.move(file : 'build/libs/acmeair-auth-service-tc7-0.1.0-SNAPSHOT.war', tofile : 'build/libs/acmeair-auth-service-tc7-0.1.0-SNAPSHOT.war.orig')
			ant.zip(destfile : 'build/libs/acmeair-auth-service-tc7-0.1.0-SNAPSHOT.war', basedir : targetDir)						
	}	
}

project(':acmeair-loader') {
	apply plugin: 'application'
	mainClassName = 'com.acmeair.loader.Loader'
	
	dependencies {
        compile project(':acmeair-services-astyanax')
		compile project(':acmeair-common')
		compile project(':acmeair-services')				
		compile 'org.springframework:spring-context:3.1.2.RELEASE'
		runtime 'org.eclipse.persistence:javax.persistence:2.0.0'		
	}
}

project(':acmeair-driver') {
	dependencies {
		compile 'com.googlecode.json-simple:json-simple:1.1.1'
		compile 'org.apache.jmeter:ApacheJMeter_core:2.7'
	}
}

/*
project(':acmeair-reporter') {
	apply plugin: 'application'
	mainClassName = 'com.acmeair.reporter.html.HtmlGenerator'
	run {
		args = ['../acmeair-driver-control/logsAndReports/organizedLogs']
		maxHeapSize "3000m"
	}
	dependencies {
		compile 'com.googlecode.charts4j:charts4j:1.3'
		compile 'commons-io:commons-io:2.4'
		compile 'org.freemarker:freemarker:2.3.19'
	}
}
*/

task acmeairNetflixZip(type:Zip) {
	from ('.')
	include '**'
	exclude '.metadata', '.gradle', 'acmeair-webapp', 'acmeair-auth-service'
	into 'acmeair-netflix'
	destinationDir new File('..')
	archiveName 'acmeair-netflix-1.zip'
}

}
